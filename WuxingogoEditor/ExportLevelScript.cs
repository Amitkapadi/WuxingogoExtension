// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

using UnityEngine;
using System;
using UnityEditor;


public class EditorExportLevelScript
{
    
    public static int CurrentIndex;
    
    public static int LoadQuantity;
    
    public static void Export(UnityEngine.Transform cTransform, JSONObject lastElement)
    {
		if( lastElement["Children"].IsNullJO )
			lastElement["Children"] = new JSONObject();
		JSONObject currElement = new JSONObject();
		lastElement["Children"].Add( currElement );
		currElement["type"] = new JSONObject( "Transform" );
		currElement["name"] = new JSONObject( cTransform.name );
		currElement["position"] = new JSONObject( cTransform.position.ToString() );
		currElement["rotation"] = new JSONObject( cTransform.eulerAngles.ToString() );
		currElement["scale"] = new JSONObject( cTransform.localScale.ToString() );
		currElement["layer"] = new JSONObject( cTransform.gameObject.layer );
		CurrentIndex++;
		if( PrefabType.None != PrefabUtility.GetPrefabType( cTransform ) ) {

			var o = EditorUtility.GetPrefabParent( cTransform.gameObject );
			string path = AssetDatabase.GetAssetPath( o );
			string vpattern = @"Resources\/";
			System.Text.RegularExpressions.MatchCollection matches = System.Text.RegularExpressions.Regex.Matches( path, vpattern );
			int endIndex = matches[0].Index + matches[0].Length;
			path = path.Substring( endIndex, path.Length - endIndex );
			int nameIndex = path.LastIndexOf( "/" );
			string prefabStr = path.Substring( nameIndex + 1 );
			int suffixIndex = prefabStr.LastIndexOf( "." );
			prefabStr = prefabStr.Substring( 0, suffixIndex );
			path = path.Substring( 0, nameIndex );
			currElement["path"] = new JSONObject( path );
			currElement["prefab"] = new JSONObject( prefabStr );
			return; 			

		}
        //  <summary>
        //  Wuxingogo ======> BoxCollider
        //  </summary>
        UnityEngine.BoxCollider m_BoxCollider = cTransform.GetComponent<BoxCollider>();
        if ( null != m_BoxCollider )
        {
            JSONObject m_BoxCollider_Js = new JSONObject("BoxCollider");
            m_BoxCollider_Js["center"] = new JSONObject(m_BoxCollider.center.ToString());
            m_BoxCollider_Js["size"] = new JSONObject(m_BoxCollider.size.ToString());
            m_BoxCollider_Js["isTrigger"] = new JSONObject(m_BoxCollider.isTrigger.ToString());
            m_BoxCollider_Js["extents"] = new JSONObject(m_BoxCollider.extents.ToString());
			currElement["BoxCollider"] = m_BoxCollider_Js;
        }
        //  <summary>
        //  Wuxingogo ======> ZoneData
        //  </summary>
        ZoneData m_ZoneData = cTransform.GetComponent<ZoneData>();
        if ( null != m_ZoneData )
        {
            JSONObject m_ZoneData_Js = new JSONObject("ZoneData");
            m_ZoneData_Js["ZoneID"] = new JSONObject(m_ZoneData.ZoneID.ToString());
            m_ZoneData_Js["UpdateInterval"] = new JSONObject(m_ZoneData.UpdateInterval.ToString());
			currElement["ZoneData"] = m_ZoneData_Js;
        }
        //  <summary>
        //  Wuxingogo ======> ActiveBornPoint
        //  </summary>
        ActiveBornPoint m_ActiveBornPoint = cTransform.GetComponent<ActiveBornPoint>();
        if ( null != m_ActiveBornPoint )
        {
            JSONObject m_ActiveBornPoint_Js = new JSONObject("ActiveBornPoint");
            m_ActiveBornPoint_Js["isOnce"] = new JSONObject(m_ActiveBornPoint.isOnce.ToString());
            m_ActiveBornPoint_Js["SpeciallyHeroID"] = new JSONObject(m_ActiveBornPoint.SpeciallyHeroID.ToString());
            m_ActiveBornPoint_Js["excuteTime"] = new JSONObject((int)m_ActiveBornPoint.excuteTime);
			currElement["ActiveBornPoint"] = m_ActiveBornPoint_Js;
        }
        //  <summary>
        //  Wuxingogo ======> CapsuleCollider
        //  </summary>
        UnityEngine.CapsuleCollider m_CapsuleCollider = cTransform.GetComponent<CapsuleCollider>();
        if ( null != m_CapsuleCollider )
        {
            JSONObject m_CapsuleCollider_Js = new JSONObject("CapsuleCollider");
            m_CapsuleCollider_Js["center"] = new JSONObject(m_CapsuleCollider.center.ToString());
            m_CapsuleCollider_Js["radius"] = new JSONObject(m_CapsuleCollider.radius.ToString());
            m_CapsuleCollider_Js["height"] = new JSONObject(m_CapsuleCollider.height.ToString());
			currElement["CapsuleCollider"] = m_CapsuleCollider_Js;
        }
        //  <summary>
        //  Wuxingogo ======> CommonMonsterBP
        //  </summary>
        CommonMonsterBP m_CommonMonsterBP = cTransform.GetComponent<CommonMonsterBP>();
        if ( null != m_CommonMonsterBP )
        {
            JSONObject m_CommonMonsterBP_Js = new JSONObject("CommonMonsterBP");
            m_CommonMonsterBP_Js["MonsterID"] = new JSONObject(m_CommonMonsterBP.MonsterID.ToString());
            m_CommonMonsterBP_Js["bornID"] = new JSONObject(m_CommonMonsterBP.bornID.ToString());
            m_CommonMonsterBP_Js["delayTime"] = new JSONObject(m_CommonMonsterBP.delayTime.ToString());
            m_CommonMonsterBP_Js["intervalTime"] = new JSONObject(m_CommonMonsterBP.intervalTime.ToString());
            m_CommonMonsterBP_Js["isActive"] = new JSONObject(m_CommonMonsterBP.isActive.ToString());
            m_CommonMonsterBP_Js["MaxAliveCount"] = new JSONObject(m_CommonMonsterBP.MaxAliveCount.ToString());
            m_CommonMonsterBP_Js["MaxBornCount"] = new JSONObject(m_CommonMonsterBP.MaxBornCount.ToString());
            m_CommonMonsterBP_Js["bornCount"] = new JSONObject(m_CommonMonsterBP.bornCount.ToString());
			LoadQuantity += m_CommonMonsterBP.TotalSize;
			currElement["CommonMonsterBP"] = m_CommonMonsterBP_Js;
        }
        //  <summary>
        //  Wuxingogo ======> PetBornPoint
        //  </summary>
        PetBornPoint m_PetBornPoint = cTransform.GetComponent<PetBornPoint>();
        if ( null != m_PetBornPoint )
        {
            JSONObject m_PetBornPoint_Js = new JSONObject("PetBornPoint");
            m_PetBornPoint_Js["petKey"] = new JSONObject(m_PetBornPoint.petKey.ToString());
            m_PetBornPoint_Js["isFollow"] = new JSONObject(m_PetBornPoint.isFollow.ToString());
            m_PetBornPoint_Js["bornID"] = new JSONObject(m_PetBornPoint.bornID.ToString());
            m_PetBornPoint_Js["delayTime"] = new JSONObject(m_PetBornPoint.delayTime.ToString());
            m_PetBornPoint_Js["intervalTime"] = new JSONObject(m_PetBornPoint.intervalTime.ToString());
            m_PetBornPoint_Js["isActive"] = new JSONObject(m_PetBornPoint.isActive.ToString());
            m_PetBornPoint_Js["MaxAliveCount"] = new JSONObject(m_PetBornPoint.MaxAliveCount.ToString());
            m_PetBornPoint_Js["MaxBornCount"] = new JSONObject(m_PetBornPoint.MaxBornCount.ToString());
            m_PetBornPoint_Js["bornCount"] = new JSONObject(m_PetBornPoint.bornCount.ToString());
			LoadQuantity += m_PetBornPoint.TotalSize;
			currElement["PetBornPoint"] = m_PetBornPoint_Js;
        }
        //  <summary>
        //  Wuxingogo ======> CharacterBP
        //  </summary>
        CharacterBP m_CharacterBP = cTransform.GetComponent<CharacterBP>();
        if ( null != m_CharacterBP )
        {
            JSONObject m_CharacterBP_Js = new JSONObject("CharacterBP");
            m_CharacterBP_Js["bornID"] = new JSONObject(m_CharacterBP.bornID.ToString());
            m_CharacterBP_Js["delayTime"] = new JSONObject(m_CharacterBP.delayTime.ToString());
            m_CharacterBP_Js["intervalTime"] = new JSONObject(m_CharacterBP.intervalTime.ToString());
            m_CharacterBP_Js["isActive"] = new JSONObject(m_CharacterBP.isActive.ToString());
            m_CharacterBP_Js["MaxAliveCount"] = new JSONObject(m_CharacterBP.MaxAliveCount.ToString());
            m_CharacterBP_Js["MaxBornCount"] = new JSONObject(m_CharacterBP.MaxBornCount.ToString());
            m_CharacterBP_Js["bornCount"] = new JSONObject(m_CharacterBP.bornCount.ToString());
			LoadQuantity += m_CharacterBP.TotalSize;
			currElement["CharacterBP"] = m_CharacterBP_Js;
        }
        //  <summary>
        //  Wuxingogo ======> Transform
        //  </summary>
        UnityEngine.Transform m_Transform = cTransform.GetComponent<Transform>();
        if ( null != m_Transform )
        {
            JSONObject m_Transform_Js = new JSONObject("Transform");
            m_Transform_Js["position"] = new JSONObject(m_Transform.position.ToString());
            m_Transform_Js["rotation"] = new JSONObject(m_Transform.rotation.ToString());
            m_Transform_Js["localScale"] = new JSONObject(m_Transform.localScale.ToString());
			currElement["Transform"] = m_Transform_Js;
        }
        if ( PrefabType.None == PrefabUtility.GetPrefabType( cTransform ) )
        {
            for (int pos = 0; (pos < cTransform.childCount); pos = (pos + 1))
            {
                EditorExportLevelScript.Export(cTransform.GetChild( pos ), currElement);
            }
        }
    }
}
