// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------




namespace wuxingogo.Editor
{
	using UnityEditor;
	using System.Collections;
	using UnityEngine;
	using System;
	using System.Reflection;


	public class CodeReviewEditor : XBaseWindow
	{
		[MenuItem( "Wuxingogo/Code/CodeReviewEditor" )]
		static void Initialization()
		{
			Init<CodeReviewEditor>();
		}

		private UnityEngine.Object ScriptFile = null;

		public override void OnXGUI()
		{
			DoButton( "OpenMonoScript", OpenMonoScript );

			DoButton( "Clear", () => ScriptFile = null );

			ScriptFile = CreateObjectField( ScriptFile );

			if( null != ScriptFile ) {

				Type scriptType = ScriptFile.GetType();

				CreateLabel("Fields");
				ShowMemberInfo(scriptType.GetFields());

//				CreateLabel("Properties");
//				ShowMemberInfo(scriptType.GetProperties());
//
//				CreateLabel("Members");
//				ShowMemberInfo(scriptType.GetMembers());
			}
        	
		}

		public void ShowMemberInfo(MemberInfo[] memberInfo){
			
			for( int pos = 0; pos < memberInfo.Length; pos++ ) {
				//  TODO loop in memberInfo.Length
				BeginHorizontal();
				CreateLabel( memberInfo[pos].ToString() );
				CreateLabel( memberInfo[pos].DeclaringType.ToString());
				CreateSpaceButton( memberInfo[pos].Name );
				EndHorizontal();
			}
		}

		private void OpenMonoScript()
		{
			string path = EditorUtility.OpenFilePanel( "Open A Template", XEditorSetting.ProjectPath, "" );
			if( path == "" )
				return;
			
			path = FileUtil.GetProjectRelativePath( path );

			ScriptFile = AssetDatabase.LoadAssetAtPath<MonoScript>( path );

			Debug.Log( "script is : " + ScriptFile.ToString() );
		}
	}
}
